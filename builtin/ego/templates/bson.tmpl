{{define "BSON"}}
{{printf "// BSON {{{"}}
{{sig .Model}} GetBSON() (interface{}, error) {
    {{with $model := .Model}}
    return struct {
        {{range $key, $trait := $model.Traits}}
            {{traitFieldName $trait}} {{typeFor $trait.Type}} {{traitFieldTags $trait}}
        {{end}}
        {{range $key, $relation := $model.Relations}}
            {{relationFieldName $relation}} {{relationFieldType $relation}} {{relationFieldTags $relation}}
            {{if isVirtual $model $relation}}
                {{virtualRelationExtraFields $relation}}
            {{end}}
        {{end}}
    }{
        {{range $key, $trait := $model.Traits}}
            {{if isID $trait}}
            {{else}}
            {{traitFieldName $trait}}: {{this $model}}.{{traitFieldName $trait}},
            {{end}}
        {{end}}
        {{range $key, $relation := $model.Relations}}
            {{relationFieldName $relation}}: {{this $model}}.{{relationFieldName $relation}},
            {{if isVirtual $model $relation}}
            {{name $relation.Name}}Kind: {{this $model}}.{{name $relation.Name}}Kind,
            {{end}}
        {{end}}
    }, nil
    {{end}}
}

{{sig .Model}} SetBSON(raw bson.Raw) (error) {
    {{with $model := .Model}}
    tmp :=  struct {
        {{range $key, $trait := $model.Traits}}
            {{if isID $trait}}
                {{traitFieldName $trait}} bson.ObjectId {{traitFieldTags $trait}}
            {{else}}
            {{traitFieldName $trait}} {{typeFor $trait.Type}} {{traitFieldTags $trait}}
            {{end}}
        {{end}}
        {{range $key, $relation := $model.Relations}}
            {{relationFieldName $relation}} {{relationFieldType $relation}} {{relationFieldTags $relation}}
            {{if isVirtual $model $relation}}
                {{virtualRelationExtraFields $relation}}
            {{end}}
        {{end}}
    }{}

    err := raw.Unmarshal(&tmp)
    if err != nil { return err }

    {{range $key, $trait := $model.Traits}}
        {{if isID $trait}}
            {{this $model}}.{{traitFieldName $trait}} = tmp.{{traitFieldName $trait}}.Hex()
        {{else}}
            {{this $model}}.{{traitFieldName $trait}} = tmp.{{traitFieldName $trait}}
        {{end}}
    {{end}}
    {{range $key, $relation := $model.Relations}}
        {{this $model}}.{{relationFieldName $relation}} = tmp.{{relationFieldName $relation}}
        {{if isVirtual $model $relation}}
        {{this $model}}.{{name $relation.Name}}Kind = tmp.{{name $relation.Name}}Kind
        {{end}}
    {{end}}
    return nil
    {{end}}
}
{{printf "// BSON }}}"}}
{{end}}
