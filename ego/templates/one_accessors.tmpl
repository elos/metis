{{define "OneAccessors"}}
{{template "Setter" $}}
{{template "Getter" $}}
{{end}}

{{define "Setter"}}
{{sig .Model}} Set{{name .This.Link.Name}}({{camel .Other.Kind}} {{.Other.Type}}) error {
    {{this .Model}}.{{linkFieldName .This.Link}} = {{camel .Other.Kind}}.ID().String()
    return nil
}
{{end}}

{{define "Getter"}}
{{sig .Model}} {{name .This.Link.Name}}(store data.Store) ({{.Other.Type}}, error) {
    if {{this .Model}}.{{linkFieldName .This.Link}} == "" {
        return nil, ErrEmptyLink
    }

    {{if .Other.IsPhysical}}
        {{camel .Other.Kind}} := New{{name .Other.Kind}}()
        pid, _ := mongo.ParseObjectID({{this .Model}}.{{linkFieldName .This.Link}})
        {{camel .Other.Kind}}.SetID(data.ID(pid.Hex()))
        return {{camel .Other.Kind}}, store.PopulateByID({{camel .Other.Kind}})
    {{else}}
        m := ModelFor(data.Kind({{this .Model}}.{{name .This.Link.Name}}Kind))
        {{camel .Other.Kind}} := m.({{.Other.Type}})

        pid, _ := mongo.ParseObjectID({{this .Model}}.{{linkFieldName .This.Link}})

        {{camel .Other.Kind}}.SetID(data.ID(pid.Hex()))
        return {{camel .Other.Kind}}, store.PopulateByID({{camel .Other.Kind}})
    {{end}}
}
{{end}}
